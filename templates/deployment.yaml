apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lmaobgd.fullname" . }}
  labels:
    {{- include "lmaobgd.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "lmaobgd.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "lmaobgd.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "lmaobgd.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ .Chart.Name }}-run-migrations
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command:
            - sh
            - -ec
            - |
              until pg_isready; do
                sleep 1
              done
              diesel migration run
              psql -c "
              GRANT ALL PRIVILEGES ON DATABASE $PGDATABASE TO $LMAOBGD_USER_RT;
              GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO $LMAOBGD_USER_RT;
              GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO $LMAOBGD_USER_RT;"
          env:
            - name: DATABASE_URL
              value: postgres:///
          {{- if .Values.postgresql.enabled }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                {{- if not (eq .Values.postgresql.postgresqlUsername "postgres") }}
                  key: postgresql-postgres-password
                {{- else }}
                  key: postgresql-password
                {{- end }}
                  name: {{ include "lmaobgd.postgresql.fullname" . | quote }}
            - name: PGUSER
              value: postgres
            - name: LMAOBGD_USER_RT
              value: {{ .Values.postgresql.postgresqlUsername }}
            - name: PGHOST
              value: {{ include "lmaobgd.postgresql.fullname" . | quote }}
            - name: PGPORT
              value: {{ include "lmaobgd.postgresql.port" . | quote }}
            - name: PGDATABASE
              value: {{ .Values.postgresql.postgresqlDatabase | quote }}
          {{- else }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "lmaobgd.fullname" . | quote }}
                  value: postgresql-postgres-password

            - name: PGUSER
              value: {{ .Values.externalDatabase.superUser | quote }}
            - name: PGHOST
              value: {{ .Values.externalDatabase.host | quote }}
            - name: PGPORT
              value: {{ .Values.externalDatabase.port | quote }}
            - name: PGDATABASE
              value: {{ .Values.externalDatabase.database | quote }}
            - name: LMAOBGD_USER_RT
              value: {{ .Values.externalDatabase.user | quote }}
          {{- end }}

      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command:
            - sh
            - -ec
            - |
              {{- if .Values.postgresql.enabled }}
              {{- if .Values.postgresql.replication.enabled }}
              {{- end }}
              {{- end }}
              lmaobgd \
                  --bind '[::]:80' \
                  --db-read-only-pool-size {{ .Values.dbReadOnlyPoolSize }} \
                  --db-writable-pool-size {{ .Values.dbWritablePoolSize }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DATABASE_URL
              value: postgres:///
            - name: DATABASE_URL_RO
              value: 'postgres://{{ include "lmaobgd.postgresql.fullname" . }}-read/'
            - name: RUST_LOG
              value: info
          {{- if .Values.postgresql.enabled }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "lmaobgd.postgresql.fullname" . | quote }}
                  key: postgresql-password
            - name: PGUSER
              value: {{ .Values.postgresql.postgresqlUsername | quote }}
            - name: PGHOST
              value: {{ include "lmaobgd.postgresql.fullname" . | quote }}
          {{- if .Values.postgresql.replication.enabled }}
            - name: PGHOST_RO
              value: {{ printf "%s-read" (include "lmaobgd.postgresql.fullname" .) | quote }}
          {{- end }}
            - name: PGPORT
              value: {{ include "lmaobgd.postgresql.port" . | quote }}
            - name: PGDATABASE
              value: {{ .Values.postgresql.postgresqlDatabase | quote }}
          {{- else }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "lmaobgd.fullname" . | quote }}
                  key: postgresql-password

            - name: PGUSER
              value: {{ .Values.externalDatabase.user | quote }}
            - name: PGHOST
              value: {{ .Values.externalDatabase.host | quote }}
          {{- if .Values.externalDatabase.hostRead }}
            - name: PGHOST_RO
              value: {{ .Values.externalDatabase.hostRead | quote }}
          {{- end }}
            - name: PGPORT
              value: {{ .Values.externalDatabase.port | quote }}
            - name: PGDATABASE
              value: {{ .Values.externalDatabase.database | quote }}
          {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/check
              port: http
          readinessProbe:
            httpGet:
              path: /api/check
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
